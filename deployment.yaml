apiVersion: apps/v1beta2
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "2"
    field.cattle.io/creatorId: user-rddjj
    kubectl.kubernetes.io/last-applied-configuration: '{"apiVersion":"apps/v1beta2","kind":"Deployment","metadata":{"annotations":{"deployment.kubernetes.io/revision":"3","field.cattle.io/creatorId":"user-rddjj"},"creationTimestamp":"2018-10-27T07:55:53Z","generation":3,"labels":{"cattle.io/creator":"norman","workload.user.cattle.io/workloadselector":"deployment-bf-user"},"name":"user","namespace":"bf","resourceVersion":"647520","selfLink":"/apis/apps/v1beta2/namespaces/bf/deployments/user","uid":"ba6b5f27-d9bd-11e8-85e2-fa163e68c03b"},"spec":{"progressDeadlineSeconds":600,"replicas":1,"revisionHistoryLimit":10,"selector":{"matchLabels":{"workload.user.cattle.io/workloadselector":"deployment-bf-user"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":0},"type":"RollingUpdate"},"template":{"metadata":{"annotations":{"cattle.io/timestamp":"2018-10-27T08:21:44Z"},"creationTimestamp":null,"labels":{"workload.user.cattle.io/workloadselector":"deployment-bf-user"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"name","operator":"In","values":["one"]}]}]}}},"containers":[{"env":[{"name":"DB_HOST","value":"mongo-mongodb"},{"name":"DEBUG","value":"api:*"},{"name":"NODE_ENV","value":"production"},{"name":"DB_PWD","valueFrom":{"secretKeyRef":{"key":"mongodb-root-password","name":"mongo-mongodb"}}},{"name":"DB_USER","valueFrom":{"secretKeyRef":{"key":"mongodb-root-username","name":"mongo-mongodb"}}}],"image":"blueforest/user:1.0.7","imagePullPolicy":"Always","name":"user","resources":{},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{},"privileged":false,"readOnlyRootFilesystem":false,"runAsNonRoot":false},"stdin":true,"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","tty":true,"volumeMounts":[{"mountPath":"/etc/user","name":"user-claim"}]}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{},"terminationGracePeriodSeconds":30,"volumes":[{"name":"user-claim","persistentVolumeClaim":{"claimName":"user-claim"}}]}}}}'
  creationTimestamp: 2018-10-27T08:37:17Z
  generation: 2
  labels:
    cattle.io/creator: norman
    workload.user.cattle.io/workloadselector: deployment-bf-user
  name: user
  namespace: bf
  resourceVersion: "1153377"
  selfLink: /apis/apps/v1beta2/namespaces/bf/deployments/user
  uid: 82d885f1-d9c3-11e8-85e2-fa163e68c03b
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-bf-user
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cattle.io/timestamp: 2018-10-30T16:43:12Z
      creationTimestamp: null
      labels:
        workload.user.cattle.io/workloadselector: deployment-bf-user
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: name
                operator: In
                values:
                - one
      containers:
      - env:
        - name: DB_HOST
          value: mongo-mongodb
        - name: DEBUG
          value: api:*
        - name: NODE_ENV
          value: production
        - name: DB_PWD
          valueFrom:
            secretKeyRef:
              key: mongodb-root-password
              name: mongo-mongodb
              optional: false
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              key: mongodb-root-username
              name: mongo-mongodb
              optional: false
        - name: AUTH_TOKEN_SECRET
          valueFrom:
            secretKeyRef:
              key: AUTH_TOKEN_SECRET
              name: bfsecrets
        image: blueforest/user:1.0.7
        imagePullPolicy: Always
        name: user
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities: {}
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
        volumeMounts:
        - mountPath: /etc/user
          name: user-claim
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: user-claim
        persistentVolumeClaim:
          claimName: user-claim
